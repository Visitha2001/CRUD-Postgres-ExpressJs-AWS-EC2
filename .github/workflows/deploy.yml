name: Deploy to EC2 (PM2)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch: 

permissions:
  contents: read

concurrency:
  group: deploy-ec2
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node (for validation only)
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Validate package.json
        run: |
          node -e "const p=require('./package.json'); if(!p.scripts?.start){process.exit(1)}"

      - name: Upload project to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          port: ${{ secrets.EC2_PORT || 22 }}
          source: |
            ./
            !node_modules/**
            !.git/**
            !.github/**
            !**/*.log
          target: ${{ secrets.EC2_PATH }}
          overwrite: true

      - name: Deploy on EC2 with PM2
        uses: appleboy/ssh-action@v1.1.0
        env:
          EC2_PATH: ${{ secrets.EC2_PATH }}
          PM2_NAME: ${{ secrets.PM2_NAME || 'crud-app' }}
          NODE_ENV: ${{ secrets.NODE_ENV || 'production' }}
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          port: ${{ secrets.EC2_PORT || 22 }}
          script_stop: true
          envs: EC2_PATH,PM2_NAME,NODE_ENV
          script: |
            set -e

            # Ensure directory exists and set ownership to current user
            mkdir -p "$EC2_PATH"
            cd "$EC2_PATH"

            # Ensure Node and PM2 available (adjust if you use nvm)
            if ! command -v node >/dev/null 2>&1; then
              echo "Node.js not found. Please install Node 20.x on the server."
              exit 1
            fi

            if ! command -v pm2 >/dev/null 2>&1; then
              echo "Installing PM2 globally..."
              sudo npm i -g pm2
            fi

            # Install dependencies
            if [ -f package-lock.json ]; then
              npm ci --omit=dev
            else
              npm i --omit=dev
            fi

            # Make sure .env exists on server (not provided by CI)
            if [ ! -f .env ]; then
              echo ".env not found at $EC2_PATH/.env"
              echo "Create it with DB_* and PORT variables before deploying."
              exit 1
            fi

            # Start or reload with PM2
            if pm2 describe "$PM2_NAME" > /dev/null; then
              echo "Reloading existing PM2 app: $PM2_NAME"
              pm2 reload "$PM2_NAME"
            else
              echo "Starting PM2 app: $PM2_NAME"
              pm2 start src/index.js --name "$PM2_NAME"
            fi

            pm2 save
